#%RAML 1.0
title: petshop
description: Pet Shop Api
version: 0.0
baseUri: http://localhost:8081/petshop/v0

uses:
  petshop:  types/petshop.raml
  petshops:  types/petshops.raml
  service:  types/service.raml
  accesory:  types/accesory.raml
  animal:  types/animal.raml
  client:  types/client.raml
  date:  types/date.raml
  dates:  types/dates.raml
  employee:  types/employee.raml
  food:  types/food.raml
  product:  types/product.raml
  sale:  types/sale.raml
  pagination: glapi-global-apis-commons-commons/types/pagination.raml

resourceTypes: 
  collection: !include glapi-global-apis-commons-commons/resourceTypes/collection.raml

traits: 
  pageable: !include glapi-global-apis-commons-commons/traits/pageable.raml

/petshops:
  description: |
    petshops in the town
  type: collection
  get:
    is: [pageable]
    description: |
      petshops lists
    queryParameters:
      petshop.id:
        description: |
          petshop id
        type: number
        required: true
        example: 1
      petshop.address:
        description: |
          petshop address
        type: string
        required: true
        example: "Insurgentes Sur 345, Hip贸dromo, 06170, CDMX"
      petshop.contact:
        description: |
          petshop contact
        type: number
        required: true
        example: 55674309
      petshop.schedule:
        description: |
          petshop schedule
        type: string
        required: true
        example: "Lunes a Domingo de 9:00am a 8:00pm"
      petshop.logo:
        description: |
          petshop logo
        type: string
        required: true
        example: "logo.jpg"
    responses:
      200:
        body:
          application/json:
            type: petshops
            example: !include examples/petshops/get_200.json
  post:
    body:
      application/json:
        properties:
          petshop.address:
            type: string
            required: true
            example: "Insurgentes Sur 345, Hip贸dromo, 06170, CDMX"
          petshop.contact:
            type: number
            required: true
            example: 55674309
          petshop.schedule:
            type: string
            required: true
            example: "Lunes a Domingo de 9:00am a 8:00pm"
          petshop.logo:
            type: string
            required: false
            example: "logo.jpg"
    responses:
        200:
          body:
            application/json:
              type: petshop
              example: !include examples/petshops/petshop_id/post_200.json
  /{petshop-id}:
    get:
      uriParameters:
        petshop-id:
          type: string
          description: petshop identifier
          # minLength: 1
          # maxLength: 10
      responses:
        200:
          body:
            application/json:
              type: petshop
              example: !include examples/petshops/petshop_id/get_200.json
    put:
      body:
        application/json:
          properties:
            petshop.address:
              type: string
              required: true
              example: "Insurgentes Sur 345, Hip贸dromo, 06170, CDMX"
            petshop.contact:
              type: number
              required: true
              example: 55674309
            petshop.schedule:
              type: string
              required: false
              example: "Lunes a Domingo de 9:00am a 8:00pm"
            petshop.logo:
              type: string
              required: false
              example: "logo.jpg"
            petshop.name:
              type: string
              required: true
              example: "logo.jpg"
      responses:
        200:
          body:
            application/json:
              example: !include examples/petshops/petshop_id/put_200.json
    patch:
      body:
        application/json:
          properties:
            petshop.address:
              type: string
              required: false
              example: "Insurgentes Sur 345, Hip贸dromo, 06170, CDMX"
            petshop.contact:
              type: number
              required: false
              example: 55674309
            petshop.schedule:
              type: string
              required: false
              example: "Lunes a Domingo de 9:00am a 8:00pm"
            petshop.logo:
              type: string
              required: false
              example: "logo.jpg"
            petshop.name:
              type: string
              required: false
              example: "logo.jpg"
      responses:
        200:
          body:
            application/json:
              example: !include examples/petshops/petshop_id/patch_200.json
    delete:
      responses:
        200:
          body:
            application/json:
              example: !include examples/petshops/petshop_id/delete_200.json
    /clients:
      get:
    /employees:
      get:
    /products:
      get:
    /dates:
      get:
/accesories:
  description: |
    accesories in the shop
  type: collection
  get: 
    is: [pageable]
    description: |
      accesories list
    queryParameters:
      accesory.id:
        description: |
          accesory id
        type: number
        required: true
        example: 1
      accesory.type:
        description: |
          accesory type
        type: string
        required: true
        example: "Food plate"
      accesory.color:
        description: |
          accesory color
        type: string
        required: true
        example: "Blue"
      accesory.material:
        description: |
          accesory material
        type: string
        required: true
        example: "plastic"
      accesory.brand:
        description: |
          accesory brand
        type: string
        required: true
        example: "Cobe"
    responses: 
      200:
        body: 
          application/json:
            type: accesories
            example: !include examples/accesories/get_200.json
  post:
    body: 
      application/json:
        properties: 
          accesory.type:
            type: string
            required: true
            example: "Food plate"
          accesory.color:
            type: string
            required: true
            example: "Orange"
          accesory.material:
            type: string
            required: true
            example: "Plastic"
          accesory.brand:
            type: string
            required: true
            example: "Cobe"
    responses: 
      200:
        body: 
          application/json:
            type: accesory
            example: !include examples/accesories/post_200.json
  /{accesory-id}:
    get:
      uriParameters:
        accesory-id:
          type: number
          description: accesory identifier
      responses:
        200:
          body: 
            application/json:
              type: accesory
              example: !include examples/accesories/accesory_id/get_200.json
    put:
      body:
        application/json:
          properties:
            accesory.type:
              type: string
              required: true
              example: "Food plate"
            accesory.color:
              type: string
              required: true
              example: "Blue"
            accesory.material:
              type: string
              required: true
              example: "Plastic"
            accesory.brand:
              type: string
              required: true
              example: "Cobe"
      responses: 
        200:
          body: 
            application/json:
              example: !include examples/accesories/accesory_id/put_200.json
    patch:
      body:
        application/json:
          properties:
            accesory.type:
              type: string
              required: true
              example: "Food plate"
            accesory.color:
              type: string
              required: true
              example: "Brown"
            accesory.material:
              type: string
              required: true
              example: "Plastic"
            accesory.brand:
              type: string
              required: true
              example: "Cobe"
      responses: 
        200:
          body: 
            application/json:
              example: !include examples/accesories/accesory_id/patch_200.json
    delete:
      responses:
        200:
          body:
            application/json:
              example: !include examples/accesories/accesory_id/delete_200.json
/animals:
  description: |
    animals' list in the shop
  type: collection
  get: 
    description: |
      animals list
    is: [pageable, expandable]
    queryParameters: 
      animal_id:
        description: |
          animal id
        type: string
        required: false
        example: 1
      specie:
        description: |
          animal species
        type: string
        enum: [dog, cat, bird, fish, reptile]
        enumDescription: 
          - dog: carnivorous mammal of the canid family
          - cat: carnivorous mammal of the family Felidae
          - bird: vertebrate animals that walk, jump or can fly
          - fish: primarily aquatic vertebrate animals, usually ectothermic and with gill breathing
          - reptile: vertebrate amniotic animals with keratin epidermal scales
        required: false
        example: [dog, cat, bird, fish, reptile]
      age:
        description: |
          animal's age
        type: number
        required: false
        example: 2
      weight:
        description: |
          animal's weight
        type: number
        required: false
        example: 5
      size:
        description: |
          animal's size
        type: string
        enum: [small, medium, big]
        enumDescription:
          - small: small breed size
          - medium: medium race size
          - big: large breed size
        required: false
        example: [small, medium, big] 
      color:
        description: |
          animal's color
        type: string
        required: false
        example: "beige"
      type:
        description: |
          animal's type
        type: string
        enum: [husky, labrador, persian, siamese, turtle, chamaleon, parakeet, canary, goldfish, angelfish]
        enumDescription:
          - husky: dog originally from Russia, specifically from Siberia, who was born as a working animal for the Chukchi tribe
          - labrador: dog breed originating in Newfoundland, its exceptional affability, gentleness, intelligence, nobility, energy and kindness make the farmers are generally considered as good companions for people of all ages, as well as reliable working dogs
          - persian: Cat breed characterized by having a wide and flat face and a large abundant coat of varied colors. They are commonly considered as aristocratic cats
          - siamese: Cat breed from ancient Thailand, with elegant, slender, stylized, flexible and well muscled body
          - turtle: reptile characterized by having a broad and short trunk, and a shell that protects the internal organs of your body. They are the oldest reptile group that exists
          - chamaleon: Small scaly reptiles are famous for their ability to change color according to the circumstances, for their rapid and elongated tongue, and for their eyes, which can be moved independently of each other.
          - parakeet: one of many small to medium-sized species of parrot, in multiple genera, that generally have long tail feathers
          - canary: easy-to-care-for small bird that is an ideal pet for beginners or those without a lot of time to interact with a pet bird
          - goldfish: species of freshwater fish of the Cyprinidae family
          - angelfish: small genus of freshwater fish of the family Cichlidae
        required: false
        example: [husky, labrador, persian, siamese, turtle, chamaleon, parakeet, canary, goldfish, angelfish]
    responses: 
        200:
          description: ok.
          body: 
            application/json:
              type: animals
              example: !include examples/animals/get_200.json
  post:
    description: |
      Service to meet the animals that are in the pet store
    body: 
      application/json:
        example: !include examples/animals/post_request.json
        description: JSON input example for the call POST /animals
        displayName: Full JSON input example
        type: petshop.animal

    responses: 
        200:
          description: ok.
          body: 
            application/json:
              type: animals
              example: !include examples/animals/post_200.json
      
  /{animal-id}:
    description: |
      Resource for managing the detail of the pet
    type: collection
    uriParameters:
        animal-id:
          type: string
          description: animal's identifier
    get:
      description: |
        Service for retrieving the detail of a pet
      responses: 
        200:
          description: ok.
          body: 
            application/json:
              type: petshop.animal
              example: !include examples/animals/animal_id/get_200.json
    put:
      description: |
        Resource to manage the list of the pets
      body:
        application/json:
          example: !include examples/animals/animal_id/put_request.json
          type: petshop.animal    
      responses: 
        200:
          description: ok
          body: 
            application/json:
              type: object
              example: !include examples/animals/animal_id/put_200.json
          properties:
            data:
              type: petshop.animal
    patch:
      description: |
        Resource to manage the list of the pets
          body:
            application/json:
              example: !!include examples/animals/animal_id/patch_request.json
              type: petshop.animal
      responses: 
        200:
          description: ok
          body: 
            application/json:
              type: object
              example: !include examples/animals/animal_id/patch_200.json
            properties:
              data:
                type: petshop.animal
        204:
          description: No content.
    delete:
      description: |
			  Service for delete a pet.
        responses:
        204:
          description: No Content.
/sales:
  get: 
  post:
  /{sale-id}:
    get:
    put:
    patch:
    delete:
/clients:
  description: |
    clients in the town
  type: collection
  get:
    is: [pageable]
    description: |
      clients lists
    queryParameters:
      client.id:
        description: |
          client id
        type: number
        required: true
        example: 1
      client.name:
        description: |
          client name
        type: string
        required: true
        example: "Antonio Anzures"
      client.age:
        description: |
          client age
        type: number
        required: true
        example: 31
      client.pet:
        description: |
          client pet
        type: string
        required: true
        example: "Dog"
      client.contact:
        description: |
          contact number of client
        type: number
        required: true
        example: 5536553644
      client.petshop-id:
        description: |
          petshop subscribed
        type: number
        required: true
        example: 1
    responses:
      200:
        body:
          application/json:
            type: clients
            example: !include examples/clients/get_200.json
  post:
    body:
      application/json:
        properties:
          client.name:
            type: string
            required: true
            example: "Antonio Anzures"
          client.age:
            type: number
            required: true
            example: 31
          client.contact:
            type: string
            required: true
            example: 5536553644
          client.pet:
            type: string
            required: true
            example: "Dog"
          client.petshop-id:
            type: string
            required: true
            example: 1
            
    responses:
        200:
          body:
            application/json:
              type: client
              example: !include examples/clients/post_200.json
  /{client-id}:
    get:
      uriParameters:
        client-id:
          type: string
          description: client identifier
          # minLength: 1
          # maxLength: 10
      responses:
        200:
          body:
            application/json:
              type: client
              example: !include examples/clients/client_id/get_200.json
    put:
      body:
        application/json:
          properties:
            client.name:
            type: string
            required: true
            example: "Antonio Anzures"
          client.age:
            type: number
            required: true
            example: 31
          client.contact:
            type: string
            required: true
            example: 5536553644
          client.pet:
            type: string
            required: true
            example: "Dog"
          client.petshop-id:
            type: string
            required: true
            example: 1
      responses:
        200:
          body:
            application/json:
              example: !include examples/clients/client_id/put_200.json
    patch:
      body:
        application/json:
          properties:
            client.name:
            type: string
            required: true
            example: "Antonio Anzures"
          client.age:
            type: number
            required: true
            example: 31
          client.contact:
            type: string
            required: true
            example: 5536553644
          client.pet:
            type: string
            required: true
            example: "Dog"
          client.petshop-id:
            type: string
            required: true
            example: 1
      responses:
        200:
          body:
            application/json:
              example: !include examples/clients/client_id/patch_200.json
    delete:
      responses:
        200:
          body:
            application/json:
              example: !include examples/clients/client_id/delete_200.json
    /purchases:
      get:
        is: [pageable]
        description: |
          List of purchases for a specific client
        queryParameters:
          employee.id:
            description: |
              employee id
            type: number
            required: false
            example: 1964401
          product.id:
            description: |
              product id
            type: number
            required: false
            example: 1964401
          petshop.id:
            description: |
              petshop id
            type: number
            required: false
            example: 1964401
          sale.method_payment:
            description: |
              payment method
            type: string
            required: true
            example: "plastic"
          sale.sale_date:
            description: |
              date when the purchase was made
            type: string
            required: true
            example: "Cobe"
          sale.total_amount:
            description: |
              total amount for the sale
            type: string
            required: true
            example: "Cobe"
        responses:
          200:
            body:
              application/json:
                type: client
                example: !include examples/clients/client_id/purchases/get_200.json
      /{sale-id}:
        description: Detail of a purchase of a client
        type: collection-item
        get:
          uriParameters:
            sale-id:
              type: number
              description: Sale id
              example: 1
          responses:
            200:
              body:
                application/json:
                  type: collection-item
                  example: !include examples/clients/client_id/purchases/sale_id/get_200.json 
/dates:
  description: Used for interact with information about dates
  type: collection
  get:
    is: [pageable]
    description: Get information about my dates
    queryParameters: 
      price:
        description: |
          price of dates
        type: number
        required: true
        example: 100
      service-id:
        description: |
          depend of my service id
        type: number
        required: true
        example: 1
      date.petshop_id:
        description: |
          depend of petshop id
        type: number
        required: true
        example: 100
      date.client_id:
        description: |
          depend of client id
        type: number
        required: true
        example: 100
    responses: 
      200:
        description: Ok: Successful response, get dates
        body:
          application/json:
            type: dates
            example: !include examples/dates/get_200.json
  post:
    description: Create a new date
    body:
      type: date
      application/json:
        example: !include examples/dates/post_200.json
    responses: 
      200:
        description: Ok: Successful created
        body:
          application/json:
            example: |
              { 
                "status": 200, 
                "message": "Successful created!" 
              }
  /{date-id}:
    description: Detail of date from id
    type: collection-item
    get:
      description: Get information about date, from {date-id}
      uriParameters:
        date-id:
          type: number
          description: ID unique for my date
          example: 1
      responses:
        200:
          description: Ok: Successful response, get dates
          body:
            application/json:
              type: date[]
              example: !include examples/dates/date_id/get_200.json 
    put:
      description: Update all information for one register of date from {date-id}
      uriParameters:
        date-id:
          type: number
          description: ID unique for my date
          example: 1
      body:
        type: date
        application/json:
          example: !include examples/dates/date_id/put_200.json
      responses: 
        200:
          description: Ok: Successful response, update information (All)
          body:
            application/json:
              example: |
                { 
                  "status": 200, 
                  "message": "Successful updated! (All)" 
                }
      patch:
        description: Update partial information for one register of date from {date-id}
        uriParameters:
          date-id:
            type: number
            description: ID unique for my date
            example: 1
        body:
          type: date
          application/json:
            example: !include examples/dates/date_id/patch_200.json
        responses: 
          200:
            description: Ok: Successful response, update information (partial)
            body:
              application/json:
                example: |
                  { 
                    "status": 200, 
                    "message": "Successful updated! (Partial)" 
                  }
      delete:
        description: Delete information about date, from {date-id}
        uriParameters:
          date-id:
            type: number
            description: ID unique for my date
            example: 1
        responses:
          200:
            description: Ok: Successful response, delete date
            body:
              application/json:
              type: date[]
              example: !include examples/dates/date_id/get_200.json 
/employees:
  description: |
    employees of the petshop
  type: collection
  get: 
    is: [pageable]
    description: |
      employee list
    queryParameters:
      employee.id:
        description: |
          employee id
        type: number
        required: false
        example: 1
      employee.name:
        description: |
          employee name
        type: string
        required: false
        example: "Juan Carlos Martinez Hernandez"
      employee.age:
        description: |
          employee age
        type: number
        required: false
        example: 25
      employee.position:
        description: |
          employee position in petshop
        type: string
        required: false
        example: "Vendedor"
      employee.contact:
        description: |
          employee contact number
        type: number
        required: false
        example: 5553344334
    responses:
      200:
        body:
          application/json:
            type: employees
            example: !include examples/employees/get_200.json
  post:
    body: 
      application/json:
        properties:
          employee.name:
            type: string
            required: true
            example: "Juan Carlos Martinez Hernandez"
          employee.age:
            type: number
            required: true
            example: 25
          petemployeeshop.position:
            type: string
            required: true
            example: "vendedor"
          employee.contact:
            type: string
            required: false
            example: 3323234434
    responses:
      200:
        body:
          application/json:
            type: employee
            example: !include examples/employees/post_200.json
  /{employee-id}:
    get:
      uriParameters:
        employee-id:
          type: string
          description: employee identifier
          # minLength: 1
          # maxLength: 10
      responses:
        200:
          body:
            application/json:
              type: employee
              example: !include examples/employees/employee_id/get_200.json
    put:
      body:
        application/json:
          properties:
            employee.name:
              type: string
              required: true
              example: "Francisco Arellano Torres"
            employee.age:
              type: number
              required: true
              example: 30
            employee.position:
              type: string
              required: false
              example: "Veterinario"
            employee.contact:
              type: string
              required: false
              example: 3392849394
      responses:
        200:
          body:
            application/json:
              example: !include examples/employees/employee_id/put_200.json
    patch:
      body:
        application/json:
          properties:
            employee.name:
              type: string
              required: true
              example: "Francisco Arellano Torres"
            employee.age:
              type: number
              required: true
              example: 30
            employee.position:
              type: string
              required: false
              example: "Veterinario"
            employee.contact:
              type: string
              required: false
              example: 3392849394
      responses:
        200:
          body:
            application/json:
              example: !include examples/employees/employee_id/patch_200.json
    delete:
      responses:
        200:
          body:
            application/json:
              example: !include examples/employees/employee_id/delete_200.json
/products:
  type: union
  of:
    - animal
    - accesory
    - food
    - petshop
  description: |
    product types in store
  get:
    is: [pageable]
    description: |
      products lists
    queryParameters:
      product.id:
        description: |
          product id
        type: number
        required: true
        example: 1
      product.type:
        description: |
          product type
        type: string
        required: true
        example: "Pechera"
      product.price:
        description: |
          product price
        type: number
        required: true
        example: 450.00
      product.quantity:
        description: |
          products in stock
        type: number
        required: true
        example: 30
      product.description:
        description: |
          product description
        type: string
        required: true
        example: "Pechera de cuero para perro raza grande, adulto"      
    responses:
      200:
        body:
          application/json:
            type: products
            example: !include examples/products/get_200.json
  post:
    body:
      application/json:
        properties:
          product.type:
            type: string
            required: true
            example: "Pechera"
          product.price:
            type: number
            required: true
            example: 450.00
          product.description:
            type: string
            required: true
            example: "Pechera de cuero para perro, raza grande, adulto"
          product.quantity:
            type: number
            required: false
            example: 30
    responses:
        200:
          body:
            application/json:
              type: petshop
              example: !include examples/products/product_id/post_200.json
  /{product-id}:
    get:
      uriParameters:
        product-id:
          type: string
          description: product identifier
          # minLength: 1
          # maxLength: 10
      responses:
        200:
          body:
            application/json:
              type: product
              example: !include examples/products/product_id/get_200.json
    put:
      body:
        application/json:
          properties:
            product.type:
              type: string
              required: true
              example: "Pechera"
            product.price:
              type: number
              required: true
              example: 400.00
            product.quantity:
              type: number
              required: false
              example: 30
            product.description:
              type: string
              required: false
              example: "Pechera de cuero para perro, raza grande, adulto"
      responses:
        200:
          body:
            application/json:
              example: !include examples/products/product_id/put_200.json
    patch:
      body:
        application/json:
          properties:
            product.type:
              type: string
              required: true
              example: "Pechera"
            product.price:
              type: number
              required: true
              example: 400.00
            product.quantity:
              type: number
              required: false
              example: 30
            product.description:
              type: string
              required: false
              example: "Pechera de cuero para perro, raza grande, adulto"
      responses:
        200:
          body:
            application/json:
              example: !include examples/products/product_id/patch_200.json
    delete:
      responses:
        200:
          body:
            application/json:
              example: !include examples/products/product_id/delete_200.json
/services:
  description: |
    services collection resource used to create new services
  type: services
  get:
    is: [ assets.paging ]
    description: |
      lists all services of a specific shop
    queryParameters:
      service.id:
        description: |
          service id
        type: number
        required: false
        example: 1964401
      service.type:
        description: |
          type of service
        enum:
          - vaccine 
          - beauty 
          - consultation
        required: false
        example: [vaccine, beauty, consultation]
      petshop-id:
        description: |
          petshop id
        type: number
        required: false
        example: 589
    responses:
      200:
        body:
          application/json:
            type: service
            example: !include examples/services/get_200.json
  post:
    description: |
      Post a new service
    body:
      application/json:
        properties:
          service.id:
            type: number
            required: true
            example: 1964401
          service.type:
            type: enum
            required: true
            example: [vaccine, beauty, consultation]
          service.petshop-id:
            type: number
            required: true
            example: 589
    responses:
      200:
        body:
          application/json:
            type: service
            example: !include examples/services/post_200.json
  /{service-id}:
    get:
      description: |
        Get a specific service
      uriParameters:
        service-id:
          type: number
          description: service identifier
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/service_id/get_200.json
    put:
      description: |
        Put a specific service
      body:
      application/json:
        properties:
          service.id:
            type: number
            required: true
            example: 1964401
          service.type:
            type: enum
            required: true
            example: [vaccine, beauty, consultation]
          service.petshop-id:
            type: number
            required: true
            example: 589
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/service_id/put_200.json
    patch:
      description: |
        Patch a specific service
      body:
      application/json:
        properties:
          service.id:
            type: number
            required: true
            example: 1964401
          service.type:
            type: enum
            required: true
            example: [vaccine, beauty, consultation]
          service.petshop-id:
            type: number
            required: true
            example: 589
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/service_id/patch_200.json
    delete:
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/service_id/delete_200.json
  /{type}:
    get:
      description: |
        Get a type of service
      uriParameters:
        type:
          type: enum
          description: service type
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/type/get_200.json
    put:
      description: |
        Put a type of service
      body:
      application/json:
        properties:
          service.id:
            type: number
            required: true
            example: 1964401
          service.type:
            type: enum
            required: true
            example: [vaccine, beauty, consultation]
          service.petshop-id:
            type: number
            required: true
            example: 589
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/type/put_200.json
    patch:
      description: |
        Patch a type of service
      body:
      application/json:
        properties:
          service.id:
            type: number
            required: true
            example: 1964401
          service.type:
            type: enum
            required: true
            example: [vaccine, beauty, consultation]
          service.petshop-id:
            type: number
            required: true
            example: 589
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/type/patch_200.json
    delete:
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/type/delete_200.json
  /{petshop-id}:
    get:
      description: |
        Get a petShop id of Service
      uriParameters:
        type:
          type: number
          description: petShop id type
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/petshop/get_200.json
    put:
      description: |
        Put a petShop of service
      body:
      application/json:
        properties:
          service.id:
            type: number
            required: true
            example: 1964401
          service.type:
            type: enum
            required: true
            example: [vaccine, beauty, consultation]
          service.petshop-id:
            type: number
            required: true
            example: 589
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/petshop/put_200.json
    patch:
      description: |
        Patch a petShop of service
      body:
      application/json:
        properties:
          service.id:
            type: number
            required: true
            example: 1964401
          service.type:
            type: enum
            required: true
            example: [vaccine, beauty, consultation]
          service.petshop-id:
            type: number
            required: true
            example: 589
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/petshop/patch_200.json
    delete:
      responses:
        200:
          body:
            application/json:
              type: service
              example: !include examples/services/petshop/delete_200.json
/food:
  description: |
    animals' food in the pet shop
  type: collection
  get:
    description: |
      food list
    is: [pageable, expandable]
    queryParameters: 
      food_id:
        description: |
          food id
        type: string
        required: false
        example: "1"
      pet:
        description: |
        type: string
        required: false
        example: "cat"
      brand:
        description: |
        type: string
        required: false
        example: "sheba"
      presentation:
        description: |
        type: string
        required: false
        example: "dry food"
    responses: 
      200:
        description: ok.
        body: 
          application/json:
            type: foods
            example: !include examples/foods/get_200.json
  post:
    description: |
      Service to register the animals' food
    body: 
      application/json:
        example: !include examples/foods/post_request.json
        description: JSON input example for the call POST /foods
        displayName: Full JSON input example
        type: petshop.food
    responses: 
      200:
        description: ok.
        body: 
          application/json:
            type: food
            example: !include examples/foods/post_200.json
  /{food-id}:
    description: |
      Resource for managing the detail of the animal food.
    type: collection
    uriParameters:
      food-id:
      type: string
      description: food identifier
    get:
      description: |
        Service for retrieving the detail of animal food
      responses:
        200:
          description: ok
          body: 
            application/json:
              type: petshop.food
              example: !include examples/foods/food_id/get_200.json
    put:
      description: |
        Resource to manage the update of the registration of the animals' food, except its identifier.
      body:
        application/json:
          example: !include examples/foods/food_id/put_request.json
          type: petshop:food
      responses: 
        200:
          description: ok
          body: 
            application/json:
              type: object
              example: !include examples/foods/food_id/put_200.json
          properties:
            data:
              type: petshop.food
    patch:
      description: |
        Resource to manage the partial update of the pet food registry, except its identifier.
      body:
        application/json:
          example: !include examples/foods/food_id/patch_request.json
      responses: 
        200:
          description: ok
          body: 
            application/json:
              type: object
              example: !include examples/foods/food_id/patch_200.json
          properties:
            data:
              type: petshop.food
		    204:
          description: No content.
    delete:
      description: |
			  Service to eliminate a pet food product.
      responses:
        204:
			    description: No Content.
# Servicio restless (Vacunas)
/getDatesReport:
  get:
    is: [ assets.paging ]
    description: |
    queryParameters:
      client.id:
        description: |
          client id
        type: number
        required: false
        example: 1964401
      petshop.id:
        description: |
          petshop id
        type: number
        required: false
        example: 1964401
      service.id:
        description: |
          service id
        type: number
        required: false
        example: 1964401
    responses:
      200:
        body:
          application/json:
            type: service
            example: !include examples/getDatesReport/get_200.json
